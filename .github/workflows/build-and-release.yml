name: generate native image and release

# okay, this was copy pasted from many places and I do not really pretent to understand what I am doing, but many thanks to the authors of:
# https://github.com/remkop/picocli-native-image-demo
# for the native image guide, as well as the authors of all the used actions and their many useful examples

# feel free to use any added value of this file under CC-0

on: 
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v6
        continue-on-error: true
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: test sbt compile
        run: |
          sbt compile
      - name: Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools
        run: |
          choco install visualstudio2017-workload-vctools
      - name: set env variables and run the build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          sbt viscelPackage
      - name: copy static files
        shell: bash
        run: |
          mkdir -p bundle
          cp -r target/resources/static bundle/
          cp code/jvm/target/native-image/viscel.exe bundle/
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: viscel-${{ matrix.os }}
          path: bundle

  build-ubuntu-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:
    - uses: actions/checkout@v2
    - uses: coursier/cache-action@v6
      continue-on-error: true
    - uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: build
      shell: bash
      run: |
        sbt viscelPackage
    - name: copy static files
      shell: bash
      run: |
        mkdir -p bundle
        cp -r target/resources/static bundle/
        cp code/jvm/target/native-image/viscel bundle/
    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: viscel-${{ matrix.os }}
        path: bundle
  
  release-artifact:
    name: Upload Release Asset
    runs-on: ubuntu-18.04
    needs: [build-windows, build-ubuntu-mac]
    steps:
      - uses: actions/download-artifact@v2
      - name: fix executable bit and create archives
        run: |
          chmod +x viscel-ubuntu-20.04/viscel
          chmod +x viscel-macos-10.15/viscel
          zip -r viscel-windows.zip viscel-windows-2016/*
          tar -zcvf viscel-linux.tar.gz viscel-ubuntu-20.04/*
          tar -zcvf viscel-macos.tar.gz viscel-macos-10.15/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: viscel-windows.zip
          asset_name: viscel-windows.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Ubuntu
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: viscel-linux.tar.gz
          asset_name: viscel-linux.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Asset macOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: viscel-macos.tar.gz
          asset_name: viscel-macos.tar.gz
          asset_content_type: application/gzip
